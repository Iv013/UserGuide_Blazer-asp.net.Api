@page "/"
@inject IUserServices UserService
@inject NavigationManager NavigationManager
@inject IJSRuntime _JsRuntime
<PageTitle>UserGuide</PageTitle>
<div class=" col-10 offset-1 p-2 ">
    <h3 class="MyH3 ">Список пользователей</h3>
</div>


<div class="col-10 offset-1 ">
    <div class="row  p-2  ">
        <div class="col-6 ">
             <div class="input-group  ">
            <input @bind-value="searchText"
                   @bind-value:event="oninput"
                   type="search"
                   @onkeyup="HandleSearch"
                   class="form-control "
                   placeholder="Строка поиска по фамилии" />
            </div>
         </div>
        <div class=" col-6 text-end ">
        <button class="btn btn-outline-primary" @onclick="()=>{ShowUser(0);} "><i class="oi oi-plus"></i><strong> Добавить</strong></button>
         </div>
    </div>
    <div class="text-sm-end border p-3 m-2">
   

        <table class="Mytable" >
            <thead>
                <tr >
                    <th>Фамилия</th>
                    <th>Имя</th>
                    <th>Отчество</th>
                    <th>Домен\Логин</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in UserService.ListUser)
                {
                    <tr>
                        <td width="20%">@user.LastName</td>
                        <td width="20%">@user.FirstName</td>
                        <td width="20%">@user.Patronymic</td>
                        <td>@user.UserLogin</td>
                        <td width="120">
                            <div>
                                <button class="btn btn-outline-info" @onclick="()=>{ShowUser(user.Userid);} ">
                                    <i class="oi oi-pencil"></i>
                                </button>
                                <button class="btn btn-outline-danger" @onclick="()=>{DeleteUser(user.Userid);} ">
                                    <i class="oi oi-trash"></i>
                                </button>
                            </div>

                        </td>
                    </tr>
                }


            </tbody>

        </table>
    </div>
   
</div>



@code {
    private string searchText = string.Empty;
    private List<UserData> ListU = new List<UserData>();
    protected override async Task OnParametersSetAsync()
    {
        await UserService.GetUsers();
        ListU = UserService.ListUser;
    }
    void ShowUser(int id) {
        if (id != 0)

            NavigationManager.NavigateTo($"user/{id}");
        else NavigationManager.NavigateTo($"user");   
    }
    void DeleteUser(int id)
    {
        NavigationManager.NavigateTo($"deleteUser/{id}");

    }
  

    public async Task HandleSearch(KeyboardEventArgs args)
    {
        if (args.Key == null || args.Key.Equals("Enter"))
        {
            var result = ListU.Where(x => x.LastName.Contains(searchText)).ToList();
            UserService.ListUser = result;
        }
        else if (searchText.Length > 1)
        {
            var result = ListU.Where(x => x.LastName.Contains(searchText, StringComparison.OrdinalIgnoreCase)).ToList();
            UserService.ListUser = result;
        }
        else if (searchText.Length == 0)
        {
            
            UserService.ListUser = ListU;
        }
    }
}
